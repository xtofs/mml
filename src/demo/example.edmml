class Schema { 
    Namespace: string,
    Alias: string,
    Elements: [SchemaElement | Name]
}

trait SchemaElement { // the child  elements of a schema
    Name: string,
}

trait Type {} 

trait ValueType extends Type {}

class ComplexType extends SchemaElement + ValueType
{
    Name: string,
    Properties: [Property | Name]
}

class EntityType extends SchemaElement + Type
{
    Name: string,
    Key: Key
    Properties: [Property | Name]
}

class Key {
    Elements: [PropertyRef | Alias]
}

class PropertyRef
{
    Name: &Property, // in CSDL XML, the value of Name is a path expression leading to a primitive property.
    Alias: string    // The value of Alias is a simple identifier.
}

trait Property
{
    Name: string,
}

// #[XmlElement(Name=Property)]
class StructuralProperty extends Property
{
    Name: string,
    Type: ValueType
}

class NavigationProperty extends Property
{
    Name: string,
    Type: EntityType
}

